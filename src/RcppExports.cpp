// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// DR_est_fy
Rcpp::List DR_est_fy(const arma::vec& ftime, const arma::vec& delta, const arma::vec trt, const arma::vec& strata, const double& trt_prob1, const double& trt_prob0, const arma::mat& censor_cov, const arma::mat& surv_cov, const arma::vec& censor_fit1, const arma::vec& censor_fit0, const double& beta_c1, const double& beta_c0, const arma::vec& surv_fit1, const arma::vec& surv_fit0, const double& beta_s1, const double& beta_s0, const arma::vec& e_time, const bool& RMST_cal);
RcppExport SEXP _MRStdCRT_DR_est_fy(SEXP ftimeSEXP, SEXP deltaSEXP, SEXP trtSEXP, SEXP strataSEXP, SEXP trt_prob1SEXP, SEXP trt_prob0SEXP, SEXP censor_covSEXP, SEXP surv_covSEXP, SEXP censor_fit1SEXP, SEXP censor_fit0SEXP, SEXP beta_c1SEXP, SEXP beta_c0SEXP, SEXP surv_fit1SEXP, SEXP surv_fit0SEXP, SEXP beta_s1SEXP, SEXP beta_s0SEXP, SEXP e_timeSEXP, SEXP RMST_calSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec& >::type ftime(ftimeSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type delta(deltaSEXP);
    Rcpp::traits::input_parameter< const arma::vec >::type trt(trtSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type strata(strataSEXP);
    Rcpp::traits::input_parameter< const double& >::type trt_prob1(trt_prob1SEXP);
    Rcpp::traits::input_parameter< const double& >::type trt_prob0(trt_prob0SEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type censor_cov(censor_covSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type surv_cov(surv_covSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type censor_fit1(censor_fit1SEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type censor_fit0(censor_fit0SEXP);
    Rcpp::traits::input_parameter< const double& >::type beta_c1(beta_c1SEXP);
    Rcpp::traits::input_parameter< const double& >::type beta_c0(beta_c0SEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type surv_fit1(surv_fit1SEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type surv_fit0(surv_fit0SEXP);
    Rcpp::traits::input_parameter< const double& >::type beta_s1(beta_s1SEXP);
    Rcpp::traits::input_parameter< const double& >::type beta_s0(beta_s0SEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type e_time(e_timeSEXP);
    Rcpp::traits::input_parameter< const bool& >::type RMST_cal(RMST_calSEXP);
    rcpp_result_gen = Rcpp::wrap(DR_est_fy(ftime, delta, trt, strata, trt_prob1, trt_prob0, censor_cov, surv_cov, censor_fit1, censor_fit0, beta_c1, beta_c0, surv_fit1, surv_fit0, beta_s1, beta_s0, e_time, RMST_cal));
    return rcpp_result_gen;
END_RCPP
}
// DR_est_mg
Rcpp::List DR_est_mg(const arma::vec& ftime, const arma::vec& delta, const arma::vec trt, const arma::vec& strata, const double& trt_prob1, const double& trt_prob0, const arma::mat& censor_cov, const arma::mat& surv_cov, const arma::vec& censor_fit1, const arma::vec& censor_fit0, const arma::vec& surv_fit1, const arma::vec& surv_fit0, const arma::vec& e_time, const bool& RMST_cal);
RcppExport SEXP _MRStdCRT_DR_est_mg(SEXP ftimeSEXP, SEXP deltaSEXP, SEXP trtSEXP, SEXP strataSEXP, SEXP trt_prob1SEXP, SEXP trt_prob0SEXP, SEXP censor_covSEXP, SEXP surv_covSEXP, SEXP censor_fit1SEXP, SEXP censor_fit0SEXP, SEXP surv_fit1SEXP, SEXP surv_fit0SEXP, SEXP e_timeSEXP, SEXP RMST_calSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec& >::type ftime(ftimeSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type delta(deltaSEXP);
    Rcpp::traits::input_parameter< const arma::vec >::type trt(trtSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type strata(strataSEXP);
    Rcpp::traits::input_parameter< const double& >::type trt_prob1(trt_prob1SEXP);
    Rcpp::traits::input_parameter< const double& >::type trt_prob0(trt_prob0SEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type censor_cov(censor_covSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type surv_cov(surv_covSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type censor_fit1(censor_fit1SEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type censor_fit0(censor_fit0SEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type surv_fit1(surv_fit1SEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type surv_fit0(surv_fit0SEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type e_time(e_timeSEXP);
    Rcpp::traits::input_parameter< const bool& >::type RMST_cal(RMST_calSEXP);
    rcpp_result_gen = Rcpp::wrap(DR_est_mg(ftime, delta, trt, strata, trt_prob1, trt_prob0, censor_cov, surv_cov, censor_fit1, censor_fit0, surv_fit1, surv_fit0, e_time, RMST_cal));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_MRStdCRT_DR_est_fy", (DL_FUNC) &_MRStdCRT_DR_est_fy, 18},
    {"_MRStdCRT_DR_est_mg", (DL_FUNC) &_MRStdCRT_DR_est_mg, 14},
    {NULL, NULL, 0}
};

RcppExport void R_init_MRStdCRT(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
